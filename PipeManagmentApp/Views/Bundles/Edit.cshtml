@model Bundle

<h1>@ViewBag.Title @Model.bundleNumber</h1>
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <strong>Исправьте следующие ошибки:</strong>
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}
<form asp-action="Edit" method="post">
    <div class="form-group" style="margin-bottom: 20px;">
        <label asp-for="bundleNumber" class="control-label">№ Пакета</label>
        <div class="col-md-5">
            <input asp-for="bundleNumber" class="form-control" />
            <span asp-validation-for="bundleNumber" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group" style="margin-bottom: 20px;">
        <label asp-for="bundleDate" class="control-label">Дата создания пакета</label>
        <div class="col-md-5">
            <input asp-for="bundleDate" class="form-control" type="datetime-local" />
            <span asp-validation-for="bundleDate" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group" style="margin-bottom: 20px;">
        <label class="control-label">Трубы в пакете</label>
        <div class="col-md-5">
            <ul id="pipe-list">
                @for (int i = 0; i < Model.pipes.Count; i++)
                {
                    <li>
                        Труба №@Model.pipes[i].number (Марка стали: @Model.pipes[i].steelGrade, Вес: @Model.pipes[i].weight кг, Качество: @Model.pipes[i].quality)
                        <button type="button" class="btn btn-danger btn-sm" onclick="removePipe(@Model.pipes[i].id)">-</button>
                    </li>
                }
            </ul>
        </div>
    </div>

    <div class="form-group" style="margin-bottom: 20px;">
        <label class="control-label">Добавить трубу из существующих</label>
        <div class="col-md-5">
            <ul id="available-pipes">
                @foreach (var pipe in ViewBag.AvailablePipes)
                {
                    <li>
                        <input type="checkbox" name="selectedPipes" value="@pipe.id" />
                        Труба №@pipe.number (Марка стали: @pipe.steelGrade, Вес: @pipe.weight кг)
                    </li>
                }
            </ul>
        </div>
        <button type="button" class="btn btn-primary" onclick="addPipes()">Добавить выбранные трубы</button>
    </div>

    <input type="hidden" id="removedPipes" name="removedPipes" />
    <input type="hidden" id="addedPipes" name="addedPipes" />

    <div class="form-group" style="margin-bottom: 20px;">
        <input type="submit" value="Сохранить изменения" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Отмена</a>
    </div>
</form>


<script>
    var removedPipes = [];
    var addedPipes = [];

    function removePipe(pipeId) {
        removedPipes.push(pipeId);
        document.getElementById("removedPipes").value = removedPipes.join(",");

        // Удаляем визуально трубу из списка
        document.querySelector(`[onclick="removePipe(${pipeId})"]`).parentElement.remove();
    }

    function addPipes() {
        const selectedPipes = document.querySelectorAll('input[name="selectedPipes"]:checked');
        selectedPipes.forEach(pipe => {
            addedPipes.push(pipe.value);
            document.getElementById("addedPipes").value = addedPipes.join(",");

            // Визуально добавляем трубу в список пакета
            const pipeText = pipe.parentElement.textContent.trim();
            const newPipe = document.createElement("li");
            newPipe.innerHTML = pipeText + ` <button type="button" class="btn btn-danger btn-sm" onclick="removePipe(${pipe.value})">-</button>`;
            document.getElementById("pipe-list").appendChild(newPipe);

            // Убираем трубу из доступных для добавления
            pipe.parentElement.remove();
        });
    }
</script>